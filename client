#include <stdio.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <unistd.h>
#include <string.h>
#include <sys/wait.h>
#include <ctype.h>
#include <signal.h>
#include <errno.h>
#include <stdlib.h>
#include <time.h>
#include <pthread.h>
// Cac include danh cho AF_INET
#include <netinet/in.h>
#include <arpa/inet.h>

int main(){
    int server_sockfd;
    int len;
    struct sockaddr_in address;
    int result;
    int bytesReceived = 0;
    const char *KT = "QUIT";

    char* serverAddr = (char *) malloc(100 * sizeof(char *));
	int serverPort;


    // Tao socket
    server_sockfd = socket( AF_INET, SOCK_STREAM, 0 );
    bzero(&address, sizeof(address));

    // Cai dat kich thuoc buffer
    int bufferLen;
    printf("Dat kick thuoc buffer: ");
    scanf("%d", &bufferLen);
    unsigned int bufferSize = sizeof(bufferLen);
    setsockopt(server_sockfd, SOL_SOCKET, SO_RCVBUF, &bufferLen, &bufferSize);
    getsockopt(server_sockfd, SOL_SOCKET, SO_RCVBUF, &bufferLen, &bufferSize);

	printf("Server IP Address: ");
	scanf("%s", serverAddr);
	printf("Server Port: ");
	scanf("%d", &serverPort);

	getchar();
    address.sin_family = AF_INET;
    address.sin_addr.s_addr = inet_addr(serverAddr);
    address.sin_port = htons(serverPort);
    len = sizeof( address );

    // Ket noi
    result = connect( server_sockfd, (struct sockaddr*)&address, len );
    if ( result < 0 ) {
        perror( "\n\n\t Ohhh, there is an error... \n\n\n" );
        exit(1);
    }

    // Doc ghi du lieu
	char sendBuffer[bufferLen];
	char receiveBuffer[bufferLen];

	while (1) {
		printf("Nhap ten file can download: ");
		fgets(sendBuffer, sizeof(sendBuffer), stdin);
		sendBuffer[strlen(sendBuffer) - 1] = '\0';

		if (strcmp(sendBuffer, KT) == 0) {
			break;
		}
//		write(server_sockfd, sendBuffer, strlen(sendBuffer) + 1);

        int msgLen = strlen(sendBuffer) + 1;
        struct timespec startTime, finishTime;
		clock_gettime(CLOCK_MONOTONIC_RAW, &startTime);

		write(server_sockfd, sendBuffer, msgLen);

        // Nhan file tu Server
        printf("Dang cho File...\n");
//        FILE *fp = fopen(sendBuffer, "wb");

        unsigned int fileSize = 0;
		unsigned int receivedSize = 0;
		read(server_sockfd, &fileSize, sizeof(fileSize));

        if(fileSize == 0){
            printf("ERROR downloading file!!!\n");
//            return 1;
        }

        FILE *fp = fopen(sendBuffer, "wb");

        while (receivedSize < fileSize){
            int currRcvSize = read(server_sockfd, receiveBuffer, bufferLen);
            receivedSize += currRcvSize;
            fwrite(receiveBuffer, 1, currRcvSize, fp);
        }

        // Thoi gian truyen file
        clock_gettime(CLOCK_MONOTONIC_RAW, &finishTime);
        long elapsedTime = (finishTime.tv_sec - startTime.tv_sec)*1e3 + (finishTime.tv_nsec - startTime.tv_nsec)/1e6;
        printf("Da nhan file '%s' \n", sendBuffer);
        printf("Kich thuoc file nhan duoc: %d\n", receivedSize);
        printf("Thoi gian la: %ld ms\n", elapsedTime);
        fclose(fp);

	}

    close( server_sockfd );
    return 0;
}
